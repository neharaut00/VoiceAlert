<!DOCTYPE html>
<html>
<head>
  <title>Analytics</title>
  <link href="index.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
  <script src="https://d3js.org/d3.v5.min.js"></script>

  <!-- <script src="./index.js"></script> -->
  <style>
    /* Add your heatmap styling here */
    .heatmap {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      grid-template-rows: repeat(4, 1fr);
      gap: 5px;
    }

    .cell {
      border: 1px solid #ddd;
      padding: 10px;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="app-window">
    <div class="sidebar">
        <h2>Voice Alert</h2>
        <ul>
            <li class="item"><a href="/"><i class="fas fa-phone"></i>    Ongoing Call</a></li>
            <li class="item"><a href="/callHistory"><i class="fas fa-address-card"></i>    Calls History</a></li>
            <li class="item selected"><a href="/analytics"><i class="fas fa-project-diagram"></i>    Analytics</a></li>  
        </ul> 

    </div>

    <div class="app-column wide">
      <h1>Voice Emotion Pie Chart</h1>
      <div id="chartContainer" style="width: 35%;">
        <canvas id="emotionChart" width="400" height="400"></canvas>
      </div>
      <h1>Emotion Heatmap</h1>
      <div class="heatmap">
        <% Object.keys(aggregatedData).forEach((hour) => { %>
          <% const maxEmotion = Object.keys(aggregatedData[hour]).reduce((a, b) => aggregatedData[hour][a] > aggregatedData[hour][b] ? a : b); %>
          <div class="cell" style="background-color: getCellColor(maxEmotion, aggregatedData[hour][maxEmotion], aggregatedData);">
            <%= hour %>:00<br>
            <%= maxEmotion %>: <%= aggregatedData[hour][maxEmotion] %>
          </div>
        <% }); %>
      </div>

  
    </div>
    <script>
      let chart;
      function getCellColor(emotion, count, aggregatedData) {
      const maxCount = Math.max(...Object.values(aggregatedData).map(hourData => hourData[emotion] || 0));
      const colorScale = d3.scaleLinear().domain([0, maxCount]).range(['#ffffff', '#ff0000']);
      console.log('Color Scale:', colorScale(count));
      return colorScale(count);
    }
      document.addEventListener('DOMContentLoaded', function() {
        const ctx = document.getElementById('emotionChart').getContext('2d');
        const labels = JSON.parse`<%-JSON.stringify(emotionsData.labels)%>`;
        const data = JSON.parse`<%-JSON.stringify(emotionsData.data)%>`;
        console.log('Raw Labels:', typeof(labels));
    console.log('Raw Data:', `<%-JSON.stringify(emotionsData.labels)%>`);
  
        if (Array.isArray(labels)) {
      chart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: labels,
          datasets: [{
            data: data,
            backgroundColor: [
              'rgba(255, 99, 132, 0.7)',
              'rgba(54, 162, 235, 0.7)',
              'rgba(255, 206, 86, 0.7)',
              'rgba(75, 192, 192, 0.7)',
              'rgba(153, 102, 255, 0.7)',
            ],
          }],
        },
      });

      console.log('Chart:', chart);
    } else {
      console.error('Error: Labels is not an array.');
    }
  });
      console.log('Chart:', chart);
    </script>
  </body>
  </html>